<?php

namespace DoctrineORMModule\Proxy\__CG__\User\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OrderConfiguration extends \User\Entity\OrderConfiguration implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }



    /**
     *
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'order', 'upgraded_user', 'configuration', 'configuration_limits', 'downgrade_configuration', 'reduce_configuration', 'certification_level', 'group', 'graduation_date', 'quantity', 'individual_cost', 'subtotal_cost', 'product_codes', 'serial_numbers', 'package', 'discounts', 'product_summary', 'free_accounts', 'useDNADFlag', 'entityRepository'];
        }

        return ['__isInitialized__', 'id', 'order', 'upgraded_user', 'configuration', 'configuration_limits', 'downgrade_configuration', 'reduce_configuration', 'certification_level', 'group', 'graduation_date', 'quantity', 'individual_cost', 'subtotal_cost', 'product_codes', 'serial_numbers', 'package', 'discounts', 'product_summary', 'free_accounts', 'useDNADFlag', 'entityRepository'];
    }

    /**
     *
     */
    public function __wakeup()
    {
        if (! $this->__isInitialized__) {
            $this->__initializer__ = function (OrderConfiguration $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if (! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };
        }
    }

    /**
     *
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function init()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'init', []);

        return parent::init();
    }

    /**
     * {@inheritDoc}
     */
    public function set_upgraded_user($value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set_upgraded_user', [$value]);

        return parent::set_upgraded_user($value);
    }

    /**
     * {@inheritDoc}
     */
    public function set_order($value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set_order', [$value]);

        return parent::set_order($value);
    }

    /**
     * {@inheritDoc}
     */
    public function set_certification_level($value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set_certification_level', [$value]);

        return parent::set_certification_level($value);
    }

    /**
     * {@inheritDoc}
     */
    public function set_group($value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set_group', [$value]);

        return parent::set_group($value);
    }

    /**
     * {@inheritDoc}
     */
    public function set_configuration($value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set_configuration', [$value]);

        return parent::set_configuration($value);
    }

    /**
     * {@inheritDoc}
     */
    public function generateProductCode()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateProductCode', []);

        return parent::generateProductCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductSummary()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductSummary', []);

        return parent::getProductSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function onlyStudyTools()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onlyStudyTools', []);

        return parent::onlyStudyTools();
    }

    /**
     * {@inheritDoc}
     */
    public function onlyTransitionCourse()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onlyTransitionCourse', []);

        return parent::onlyTransitionCourse();
    }

    /**
     * {@inheritDoc}
     */
    public function onlyPreceptorTraining()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onlyPreceptorTraining', []);

        return parent::onlyPreceptorTraining();
    }

    /**
     * {@inheritDoc}
     */
    public function compareToProductCode($productCode, $legacy = false)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'compareToProductCode', [$productCode, $legacy]);

        return parent::compareToProductCode($productCode, $legacy);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductArray($idOnly = false)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductArray', [$idOnly]);

        return parent::getProductArray($idOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function hasMultipleProducts()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasMultipleProducts', []);

        return parent::hasMultipleProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductPrice()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductPrice', []);

        return parent::getProductPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotalCost()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotalCost', []);

        return parent::getSubtotalCost();
    }

    /**
     * {@inheritDoc}
     */
    public function isInstructorAccount()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isInstructorAccount', []);

        return parent::isInstructorAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountSummary($includeGroup = true, $listSeparator = '<br>')
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountSummary', [$includeGroup, $listSeparator]);

        return parent::getAccountSummary($includeGroup, $listSeparator);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary($includeQuantity = true, $confirmationMessage = false)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', [$includeQuantity, $confirmationMessage]);

        return parent::getSummary($includeQuantity, $confirmationMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductCode()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductCode', []);

        return parent::getProductCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscounts()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscounts', []);

        return parent::getDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateFinalPrice()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateFinalPrice', []);

        return parent::calculateFinalPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateSubtotal()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateSubtotal', []);

        return parent::calculateSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function generateSerialNumbers()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateSerialNumbers', []);

        return parent::generateSerialNumbers();
    }

    /**
     * {@inheritDoc}
     */
    public function addSerialNumber(\User\Entity\SerialNumberLegacy $serial)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSerialNumber', [$serial]);

        return parent::addSerialNumber($serial);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoiceArray()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoiceArray', []);

        return parent::getInvoiceArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setUUID($uuid = null)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUUID', [$uuid]);

        return parent::setUUID($uuid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUUID()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUUID', []);

        return parent::getUUID();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityRepository()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityRepository', []);

        return parent::getEntityRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function save($flush = true)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', [$flush]);

        return parent::save($flush);
    }

    /**
     * {@inheritDoc}
     */
    public function delete($flush = true)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', [$flush]);

        return parent::delete($flush);
    }

    /**
     * {@inheritDoc}
     */
    public function flush()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'flush', []);

        return parent::flush();
    }

    /**
     * {@inheritDoc}
     */
    public function isDatabaseField($field)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDatabaseField', [$field]);

        return parent::isDatabaseField($field);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldmap()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldmap', []);

        return parent::getFieldmap();
    }

    /**
     * {@inheritDoc}
     */
    public function isUsingDNAD()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUsingDNAD', []);

        return parent::isUsingDNAD();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getQueryBuilder()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQueryBuilder', []);

        return parent::getQueryBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function deleteGroup($group)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteGroup', [$group]);

        return parent::deleteGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortName()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortName', []);

        return parent::getShortName();
    }
}
